server.port=8081
spring.zipkin.base-url=http://localhost:9411/
spring.mvc.throw-exception-if-no-handler-found=true 
#spring.web.resources.add-mappings=false

#database configuration:sql
spring.datasource.url=jdbc:mysql://${RDS_HOSTNAME:localhost}:${RDS_PORT:3306}/${RDS_DB_NAME:foodorderservice}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${RDS_USERNAME:root}
spring.datasource.password=${RDS_PASSWORD:fw16_344}
#hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
springdoc.swagger-ui.path=/swagger-ui.html
spring.application.name=notification-service

#internal url
service.dashboard.internal.url=http://localhost:8080
service.notification.internal.url=http://localhost:8081
service.payment.internal.url=http://localhost:8082
service.restaurant.internal.url=http://localhost:8083
service.user.internal.url=http://localhost:8084
logging.file.name=/App/Data/track.log

#kafka-propertry 
spring.kafka.consumer.bootstrap-servers=http://localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*